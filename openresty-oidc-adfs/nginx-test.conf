events {
  worker_connections 128;
}

env OIDC_CLIENT_ID;
env OIDC_CLIENT_SECRET;

http {

  lua_package_path '~/lua/?.lua;;';

  resolver 8.8.8.8;

  # cache for JWT verification results
  lua_shared_dict introspection 10m;
  # cache for jwks metadata documents
  lua_shared_dict discovery 1m;

  error_log /dev/stdout debug;
  
  server {
    listen 9000;


    location / {

      access_by_lua '
        local opts = {
          client_id = os.getenv("OIDC_CLIENT_ID"),
          client_secret = os.getenv("OIDC_CLIENT_SECRET"),
          redirect_uri_path = "/redir",
          ssl_verify = "no",
          discovery = "https://adfs.myob.com.au/adfs/.well-known/openid-configuration",
        }

        local res, err, _target, session = require("resty.openidc").authenticate(opts)
        ngx.log(ngx.ERR, tostring(res))
        ngx.log(ngx.ERR, tostring(err))
        if err or not res then
          ngx.status = 403
          ngx.say(err and tostring(err) or "forbidden")
          ngx.exit(ngx.HTTP_FORBIDDEN)
        end

        ngx.req.set_header("Authorization", "Bearer "..session.data.enc_id_token)
      ';

      proxy_pass http://nginx:8080;
    }
  }
}
